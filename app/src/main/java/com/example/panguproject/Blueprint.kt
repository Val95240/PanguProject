package com.example.panguproject

class Blueprint(
    name: String,
    costDescription: String? = null,
    shortCostDescription: String? = null,
    effectDescription: String? = null,
    shortEffectDescription: String? = null,
    val costFunction: ((diceList: List<Dice>) -> Boolean)? = null,
    val clickCostFunction: ((diceList: List<Dice>) -> Boolean)? = null,
    val click: ((gameViewModel: GameViewModel) -> Unit)? = null,
    val startTurn: ((gameViewModel: GameViewModel) -> Unit)? = null,
    val onBuy: ((gameViewModel: GameViewModel) -> Unit)? = null,
    val canApply: ((gameViewModel: GameViewModel) -> Boolean) = { true },
) : DetailCard(
    name,
    costDescription,
    shortCostDescription,
    effectDescription,
    shortEffectDescription,
) {
    var usable: Boolean = (click != null)

    fun copy(used: Boolean): Blueprint {
        val blueprint = Blueprint(
            name,
            costDescription,
            shortCostDescription,
            effectDescription,
            shortEffectDescription,
            costFunction,
            clickCostFunction,
            click,
            startTurn,
            onBuy,
            canApply,
        )
        if (used)
            blueprint.usable = false
        return blueprint
    }
}

val defaultBuildingsList: List<Blueprint> = listOf(
    Blueprint(
        "Laboratory",
        effectDescription = "Consume a pair of dice to draw a blueprint.",
        shortEffectDescription = "Pair ->\nDraw a blueprint",
        clickCostFunction = Dice::isPair,
        click = GameViewModel::drawBlueprint
    ),
    Blueprint("Forge",
        effectDescription = "Consume three in a row to gain a stored wild die.",
        shortEffectDescription = "Three in a row ->\nStored wild die",
        clickCostFunction = Dice::isPair,
        click = GameViewModel::drawBlueprint),
)

val allBlueprintsList: List<Blueprint> = listOf(
    Blueprint(
        "3D Printer",
        effectDescription = "",
        shortEffectDescription = "",
        costFunction = Dice::isPair,
        clickCostFunction = Dice::isPair,
        click = GameViewModel::modMinus,
    ),
    Blueprint(
        "Backup Plan",
        effectDescription = "",
        shortEffectDescription = "",
        costFunction = Dice::isPair,
        clickCostFunction = Dice::isPair,
        click = GameViewModel::modPlus,
    ),
    Blueprint(
        "Bionic Robot",
        effectDescription = "",
        shortEffectDescription = "",
        costFunction = Dice::isPair,
        clickCostFunction = Dice::isPair,
        click = GameViewModel::modPlus,
    ),
    Blueprint(
        "Clone Machine",
        effectDescription = "",
        shortEffectDescription = "",
        costFunction = Dice::isPair,
        clickCostFunction = Dice::isPair,
        click = GameViewModel::modPlus,
    ),
    Blueprint(
        "Dome",
        effectDescription = "",
        shortEffectDescription = "",
        costFunction = Dice::isPair,
        clickCostFunction = Dice::isPair,
        click = GameViewModel::modPlus,
    ),
    Blueprint(
        "Dormant Chamber",
        effectDescription = "",
        shortEffectDescription = "",
        costFunction = Dice::isPair,
        clickCostFunction = Dice::isPair,
        click = GameViewModel::modPlus,
    ),
) + (1..6).map {
    Blueprint(
        "Drone",
        effectDescription = "",
        shortEffectDescription = "",
        costFunction = Dice::isPair,
        clickCostFunction = Dice::isPair,
        click = GameViewModel::modPlus,
    )
} + listOf(
    Blueprint(
        "Energy Saver",
        effectDescription = "",
        shortEffectDescription = "",
        costFunction = Dice::isPair,
        clickCostFunction = Dice::isPair,
        click = GameViewModel::modPlus,
    ),
    Blueprint(
        "Extractor",
        effectDescription = "",
        shortEffectDescription = "",
        costFunction = Dice::isPair,
        clickCostFunction = Dice::isPair,
        click = GameViewModel::modPlus,
    ),
    Blueprint(
        "Minor Settlement",
        effectDescription = "",
        shortEffectDescription = "",
        costFunction = Dice::isPair,
        clickCostFunction = Dice::isPair,
        click = GameViewModel::modPlus,
    ),
    Blueprint(
        "Monopole",
        effectDescription = "",
        shortEffectDescription = "",
        costFunction = Dice::isPair,
        clickCostFunction = Dice::isPair,
        click = GameViewModel::modPlus,
    ),
    Blueprint(
        "Monopole",
        effectDescription = "",
        shortEffectDescription = "",
        costFunction = Dice::isPair,
        clickCostFunction = Dice::isPair,
        click = GameViewModel::modPlus,
    ),
    Blueprint(
        "Nanobot",
        effectDescription = "",
        shortEffectDescription = "",
        costFunction = Dice::isPair,
        clickCostFunction = Dice::isPair,
        click = GameViewModel::modPlus,
    ),
    Blueprint(
        "O.M.N.I.",
        effectDescription = "",
        shortEffectDescription = "",
        costFunction = Dice::isPair,
        clickCostFunction = Dice::isPair,
        click = GameViewModel::modPlus,
    ),
    Blueprint(
        "Observatory",
        effectDescription = "",
        shortEffectDescription = "",
        costFunction = Dice::isPair,
        clickCostFunction = Dice::isPair,
        click = GameViewModel::modPlus,
    ),
    Blueprint(
        "Prospector",
        effectDescription = "",
        shortEffectDescription = "",
        costFunction = Dice::isPair,
        clickCostFunction = Dice::isPair,
        click = GameViewModel::modPlus,
    ),
    Blueprint(
        "Prototype",
        effectDescription = "",
        shortEffectDescription = "",
        costFunction = Dice::isPair,
        clickCostFunction = Dice::isPair,
        click = GameViewModel::modPlus,
    ),
    Blueprint(
        "Quantum Reactor",
        effectDescription = "",
        shortEffectDescription = "",
        costFunction = Dice::isPair,
        clickCostFunction = Dice::isPair,
        click = GameViewModel::modPlus,
    ),
    Blueprint(
        "Reactor",
        effectDescription = "",
        shortEffectDescription = "",
        costFunction = Dice::isPair,
        clickCostFunction = Dice::isPair,
        click = GameViewModel::modPlus,
    ),
    Blueprint(
        "Reactor",
        effectDescription = "",
        shortEffectDescription = "",
        costFunction = Dice::isPair,
        clickCostFunction = Dice::isPair,
        click = GameViewModel::modPlus,
    ),
    Blueprint(
        "Reactor",
        effectDescription = "",
        shortEffectDescription = "",
        costFunction = Dice::isPair,
        clickCostFunction = Dice::isPair,
        click = GameViewModel::modPlus,
    ),
    Blueprint(
        "Reactor",
        effectDescription = "",
        shortEffectDescription = "",
        costFunction = Dice::isPair,
        clickCostFunction = Dice::isPair,
        click = GameViewModel::modPlus,
    ),
    Blueprint(
        "Recycler",
        effectDescription = "",
        shortEffectDescription = "",
        costFunction = Dice::isPair,
        clickCostFunction = Dice::isPair,
        click = GameViewModel::modPlus,
    ),
    Blueprint(
        "Replicator",
        effectDescription = "",
        shortEffectDescription = "",
        costFunction = Dice::isPair,
        clickCostFunction = Dice::isPair,
        click = GameViewModel::modPlus,
    ),
    Blueprint(
        "Self-Reparation",
        effectDescription = "",
        shortEffectDescription = "",
        costFunction = Dice::isPair,
        clickCostFunction = Dice::isPair,
        click = GameViewModel::modPlus,
    ),
    Blueprint(
        "Settlement",
        effectDescription = "",
        shortEffectDescription = "",
        costFunction = Dice::isPair,
        clickCostFunction = Dice::isPair,
        click = GameViewModel::modPlus,
    ),
    Blueprint(
        "Shuttle",
        effectDescription = "",
        shortEffectDescription = "",
        costFunction = Dice::isPair,
        clickCostFunction = Dice::isPair,
        click = GameViewModel::modPlus,
    ),
    Blueprint(
        "Tourist Attraction",
        effectDescription = "",
        shortEffectDescription = "",
        costFunction = Dice::isPair,
        clickCostFunction = Dice::isPair,
        click = GameViewModel::modPlus,
    ),
    Blueprint(
        "Training Camp",
        effectDescription = "",
        shortEffectDescription = "",
        costFunction = Dice::isPair,
        clickCostFunction = Dice::isPair,
        click = GameViewModel::modPlus,
    ),
    Blueprint(
        "Transporter",
        effectDescription = "",
        shortEffectDescription = "",
        costFunction = Dice::isPair,
        clickCostFunction = Dice::isPair,
        click = GameViewModel::modPlus,
    ),
)